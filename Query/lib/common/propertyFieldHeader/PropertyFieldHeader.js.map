{"version":3,"sources":["common/propertyFieldHeader/PropertyFieldHeader.tsx"],"names":[],"mappings":"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","file":"common/propertyFieldHeader/PropertyFieldHeader.js","sourcesContent":["import * as React from 'react';\r\nimport { IconButton, Callout, DirectionalHint } from 'office-ui-fabric-react';\r\nimport { IPropertyFieldHeaderProps, IPropertyFieldHeaderState, CalloutTriggers } from './IPropertyFieldHeader';\r\n\r\nimport styles from './PropertyFieldHeader.module.scss';\r\n\r\n/**\r\n * PropertyFieldHeader component.\r\n * Displays a label and a callout\r\n */\r\nexport default class PropertyFieldHeader extends React.Component<IPropertyFieldHeaderProps, IPropertyFieldHeaderState> {\r\n    \r\n        private _infoIcon: HTMLElement;\r\n    \r\n        public constructor(props: IPropertyFieldHeaderProps, state: IPropertyFieldHeaderState) {\r\n            super(props, state);\r\n            this._onCalloutDismiss = this._onCalloutDismiss.bind(this);\r\n            this.state = {\r\n                isCalloutVisible: false\r\n            };\r\n        }\r\n    \r\n        public render(): JSX.Element {\r\n            return (\r\n                <div className={styles.headerBar}>\r\n                    <div className={styles.header}>\r\n                        {this.props.label}\r\n                    </div>\r\n                    <div className={styles.info}>\r\n                        <i className={'ms-Icon ms-Icon--Info'} ref={(infoIcon) => { this._infoIcon = infoIcon; }}\r\n                            onMouseOver={this.props.calloutTrigger === CalloutTriggers.Hover ? this._onInfoIconMouseOver.bind(this) : null} \r\n                            onMouseOut={this.props.calloutTrigger === CalloutTriggers.Hover ? this._onInfoIconMouseOut.bind(this) : null}\r\n                            onClick={this.props.calloutTrigger === CalloutTriggers.Click ? this._onInfoIconClick.bind(this) : null}></i>\r\n                    </div>\r\n                    {this.state.isCalloutVisible && (\r\n                        <Callout\r\n                            className={styles.headerCallout}\r\n                            target={this._infoIcon}\r\n                            isBeakVisible={true}\r\n                            directionalHint={DirectionalHint.leftCenter}\r\n                            directionalHintForRTL={DirectionalHint.rightCenter}\r\n                            onDismiss={this._onCalloutDismiss}\r\n                            gapSpace={this.props.gapSpace !== undefined ? this.props.gapSpace : 5}\r\n                            calloutWidth={this.props.calloutWidth}>\r\n                            {this.props.calloutContent}\r\n                        </Callout>\r\n                    )\r\n                    }\r\n                </div>);\r\n        }\r\n    \r\n    \r\n        private _onCalloutDismiss() {\r\n            if (this.state.isCalloutVisible) {\r\n                this.setState({\r\n                    isCalloutVisible: false\r\n                });\r\n            }\r\n        }\r\n        \r\n        private _onInfoIconMouseOver(): void {\r\n            if (this.props.calloutTrigger !== CalloutTriggers.Hover) {\r\n                return;\r\n            }\r\n\r\n            if (!this.state.isCalloutVisible) {\r\n                this.setState({\r\n                    isCalloutVisible: true\r\n                });\r\n            }\r\n        }\r\n    \r\n        private _onInfoIconMouseOut(e: MouseEvent): void {\r\n            if (this.props.calloutTrigger !== CalloutTriggers.Hover) {\r\n                return;\r\n            }\r\n\r\n            if (e.relatedTarget) {\r\n    \r\n                let relatedTarget: HTMLElement = (e.relatedTarget as HTMLElement);\r\n                if (relatedTarget && relatedTarget.closest('.ms-Callout-container')) {\r\n                    return;\r\n                }\r\n            }\r\n    \r\n            this.setState({\r\n                isCalloutVisible: false\r\n            });\r\n    \r\n        }\r\n\r\n        private _onInfoIconClick(): void {\r\n            if (this.props.calloutTrigger !== CalloutTriggers.Click) {\r\n                return;\r\n            }\r\n\r\n            this.setState({\r\n                isCalloutVisible: !this.state.isCalloutVisible\r\n            });\r\n        }\r\n    }"],"sourceRoot":"..\\..\\..\\src"}