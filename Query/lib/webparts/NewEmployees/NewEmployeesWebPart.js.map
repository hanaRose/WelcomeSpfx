{"version":3,"sources":["webparts/NewEmployees/NewEmployeesWebPart.ts"],"names":[],"mappings":"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","file":"webparts/NewEmployees/NewEmployeesWebPart.js","sourcesContent":["import * as React from 'react';\r\nimport * as ReactDom from 'react-dom';\r\nimport { Version } from '@microsoft/sp-core-library';\r\nimport {\r\n  BaseClientSideWebPart,\r\n  IPropertyPaneConfiguration,\r\n  PropertyPaneTextField,\r\n  PropertyPaneToggle,\r\n  PropertyPaneLabel,\r\n  IWebPartContext\r\n} from '@microsoft/sp-webpart-base';\r\nimport { IDigestCache, DigestCache } from '@microsoft/sp-http';\r\nimport * as strings from 'MessageAlertWebPartStrings';\r\nimport FileUpload from './components/NewEmployees';\r\nimport { IFileUploadProps } from './components/INewEmployeesProps';\r\nimport * as loader from '@microsoft/sp-loader';\r\nimport { PropertyFieldListPicker, PropertyFieldListPickerOrderBy } from '../../PropertyFieldListPicker';\r\nimport { PropertyPaneDropdown } from '@microsoft/sp-webpart-base/lib/propertyPane/propertyPaneFields/propertyPaneDropdown/PropertyPaneDropdown';\r\nimport { Lists } from 'sp-pnp-js';\r\n// import { PropertyFieldListPicker, PropertyFieldListPickerOrderBy } from '@pnp/spfx-property-controls/lib/PropertyFieldListPicker';\r\nexport interface INewEmployeesWebPartProps {\r\n\r\n  listName:string;\r\n  linkTitle: string;\r\n  linkColor:string;\r\n  dialogTitle:string;\r\n  icon:string;\r\n  fontSize:string;\r\n  iconSize:string;\r\n  lists: string | string[]; // Stores the list ID(s)\r\n\r\n \r\n}\r\nrequire(\"./filepicker.css\");\r\nrequire(\"./dropzone.css\");\r\nexport default class NewEmployeesWebPart extends BaseClientSideWebPart<INewEmployeesWebPartProps> {\r\n  public digest: string = \"\";\r\n  public constructor(context: IWebPartContext) {\r\n    super();\r\n    loader.SPComponentLoader.loadCss('https://code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css');\r\n  }\r\n  protected onInit(): Promise<void> {\r\n    return new Promise<void>((resolve: () => void, reject: (error: any) => void): void => {\r\n      const digestCache: IDigestCache = this.context.serviceScope.consume(DigestCache.serviceKey);\r\n      digestCache.fetchDigest(this.context.pageContext.web.serverRelativeUrl).then((digest: string): void => {\r\n        // use the digest here\r\n        this.digest = digest;\r\n        resolve();\r\n      });\r\n    });\r\n  }\r\n  public render(): void {\r\n    console.log(\"parent this.context\", this.context);\r\n    const element: React.ReactElement<IFileUploadProps> = React.createElement(\r\n      FileUpload,\r\n      {\r\n        spHttpClient: this.context.spHttpClient,\r\n        digest: this.digest,\r\n        context: this.context,\r\n        listName:this.properties.listName,\r\n        linkTitle: this.properties.linkTitle,\r\n        linkColor: this.properties.linkColor,\r\n        dialogTitle:this.properties.dialogTitle,\r\n        iconSize: this.properties.iconSize,\r\n        fontSize: this.properties.fontSize,\r\n        icon:this.properties.icon,\r\n        lists: this.properties.lists,\r\n      \r\n       \r\n\r\n\r\n      }\r\n    );\r\n\r\n    ReactDom.render(element, this.domElement);\r\n  }\r\n\r\n  protected get dataVersion(): Version {\r\n    return Version.parse('1.0');\r\n  }\r\n\r\n  protected getPropertyPaneConfiguration(): IPropertyPaneConfiguration {\r\n\r\n    return {\r\n      pages: [\r\n        {\r\n          header: {\r\n            description: strings.PropertyPaneDescription\r\n            \r\n          },\r\n          groups: [\r\n            {\r\n              groupName: strings.BasicGroupName,\r\n              groupFields: [\r\n                PropertyPaneTextField('listName', {\r\n                  label: 'שם פנימי לרשימת אחסון הנתונים',\r\n\r\n                }),\r\n                PropertyPaneTextField('linkTitle', {\r\n                  label: 'כותרת הלינק',\r\n\r\n                }),\r\n                PropertyPaneTextField('linkColor', {\r\n                  label: 'צבע טקסט הלינק',\r\n\r\n                }),\r\n                PropertyPaneTextField('dialogTitle', {\r\n                  label: 'כותרת הדיאלוג',\r\n\r\n                }),\r\n                \r\n                PropertyPaneTextField('icon', {\r\n                  label: 'אייקון',\r\n\r\n                }),\r\n                PropertyPaneTextField('fontSize', {\r\n                  label:  'גודל הפונט',\r\n\r\n                }),\r\n                PropertyPaneTextField('iconSize', {\r\n                  label: 'גודל האייקון',\r\n\r\n                }),\r\n                PropertyFieldListPicker('lists', {\r\n                  label: 'רשימה לאחסון השאלות',\r\n                  selectedList: this.properties.lists,\r\n                  includeHidden: false,\r\n                  orderBy: PropertyFieldListPickerOrderBy.Title,\r\n                  disabled: false,\r\n                  onPropertyChange: this.onPropertyPaneFieldChanged.bind(this),\r\n                  properties: this.properties,\r\n                  context: this.context,\r\n                  onGetErrorMessage: null,\r\n                  deferredValidationTime: 0,\r\n                  key: 'listPickerFieldId'\r\n                })\r\n                \r\n                 \r\n             \r\n\r\n\r\n\r\n              ]\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}