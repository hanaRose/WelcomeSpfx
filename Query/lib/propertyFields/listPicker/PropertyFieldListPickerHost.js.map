{"version":3,"sources":["propertyFields/listPicker/PropertyFieldListPickerHost.tsx"],"names":[],"mappings":"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","file":"propertyFields/listPicker/PropertyFieldListPickerHost.js","sourcesContent":["import * as React from 'react';\r\nimport { Dropdown, IDropdownOption } from 'office-ui-fabric-react/lib/Dropdown';\r\nimport { Async } from 'office-ui-fabric-react/lib/Utilities';\r\nimport { Label } from 'office-ui-fabric-react/lib/Label';\r\nimport { IPropertyFieldListPickerHostProps, IPropertyFieldListPickerHostState, ISPList, ISPLists } from './IPropertyFieldListPickerHost';\r\nimport SPListPickerService from '../../services/SPListPickerService';\r\nimport FieldErrorMessage from '../errorMessage/FieldErrorMessage';\r\n\r\n// Empty list value, to be checked for single list selection\r\nconst EMPTY_LIST_KEY = 'NO_LIST_SELECTED';\r\n\r\n/**\r\n * Renders the controls for PropertyFieldListPicker component\r\n */\r\nexport default class PropertyFieldListPickerHost extends React.Component<IPropertyFieldListPickerHostProps, IPropertyFieldListPickerHostState> {\r\n  private options: IDropdownOption[] = [];\r\n  private selectedKey: string;\r\n\r\n  private latestValidateValue: string;\r\n  private async: Async;\r\n  private delayedValidate: (value: string) => void;\r\n\r\n  /**\r\n   * Constructor method\r\n   */\r\n  constructor(props: IPropertyFieldListPickerHostProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      results: this.options,\r\n      errorMessage: ''\r\n    };\r\n\r\n    this.async = new Async(this);\r\n    this.validate = this.validate.bind(this);\r\n    this.onChanged = this.onChanged.bind(this);\r\n    this.notifyAfterValidate = this.notifyAfterValidate.bind(this);\r\n    this.delayedValidate = this.async.debounce(this.validate, this.props.deferredValidationTime);\r\n  }\r\n\r\n  public componentDidMount(): void {\r\n    // Start retrieving the SharePoint lists\r\n    this.loadLists();\r\n  }\r\n\r\n  /**\r\n   * Loads the list from SharePoint current web site\r\n   */\r\n  private loadLists(): void {\r\n    const listService: SPListPickerService = new SPListPickerService(this.props, this.props.context);\r\n    listService.getLibs().then((response: ISPLists) => {\r\n      // Start mapping the list that are selected\r\n      response.value.map((list: ISPList) => {\r\n        if (this.props.selectedList === list.Id) {\r\n          this.selectedKey = list.Id;\r\n        }\r\n        this.options.push({\r\n          key: list.Id,\r\n          text: list.Title\r\n        });\r\n      });\r\n\r\n      // Option to unselect the list\r\n      this.options.unshift({\r\n        key: EMPTY_LIST_KEY,\r\n        text: ''\r\n      });\r\n\r\n      // Update the current component state\r\n      this.setState({\r\n        results: this.options,\r\n        selectedKey: this.selectedKey\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Raises when a list has been selected\r\n   */\r\n  private onChanged(option: IDropdownOption, index?: number): void {\r\n    const newValue: string = option.key as string;\r\n    this.delayedValidate(newValue);\r\n  }\r\n\r\n  /**\r\n   * Validates the new custom field value\r\n   */\r\n  private validate(value: string): void {\r\n    if (this.props.onGetErrorMessage === null || this.props.onGetErrorMessage === undefined) {\r\n      this.notifyAfterValidate(this.props.selectedList, value);\r\n      return;\r\n    }\r\n\r\n    if (this.latestValidateValue === value) {\r\n      return;\r\n    }\r\n\r\n    this.latestValidateValue = value;\r\n\r\n    const result: string | PromiseLike<string> = this.props.onGetErrorMessage(value || '');\r\n    if (typeof result !== 'undefined') {\r\n      if (typeof result === 'string') {\r\n        if (result === '') {\r\n          this.notifyAfterValidate(this.props.selectedList, value);\r\n        }\r\n        this.setState({\r\n          errorMessage: result\r\n        });\r\n      } else {\r\n        result.then((errorMessage: string) => {\r\n          if (typeof errorMessage === 'undefined' || errorMessage === '') {\r\n            this.notifyAfterValidate(this.props.selectedList, value);\r\n          }\r\n          this.setState({\r\n            errorMessage: errorMessage\r\n          });\r\n        });\r\n      }\r\n    } else {\r\n      this.notifyAfterValidate(this.props.selectedList, value);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Notifies the parent Web Part of a property value change\r\n   */\r\n  private notifyAfterValidate(oldValue: string, newValue: string) {\r\n    // Check if the user wanted to unselect the list\r\n    const propValue = newValue === EMPTY_LIST_KEY ? '' : newValue;\r\n\r\n    // Deselect all options\r\n    this.options = this.state.results.map(option => {\r\n      if (option.selected) {\r\n        option.selected = false;\r\n      }\r\n      return option;\r\n    });\r\n    // Set the current selected key\r\n    this.selectedKey = newValue;\r\n    // Update the state\r\n    this.setState({\r\n      selectedKey: this.selectedKey,\r\n      results: this.options\r\n    });\r\n\r\n    if (this.props.onPropertyChange && propValue !== null) {\r\n      // Store the new property value\r\n      this.props.properties[this.props.targetProperty] = propValue;\r\n      // Trigger the default onPrpertyChange event\r\n      this.props.onPropertyChange(this.props.targetProperty, oldValue, propValue);\r\n      // Trigger the apply button\r\n      if (typeof this.props.onChange !== 'undefined' && this.props.onChange !== null) {\r\n        this.props.onChange(this.props.targetProperty, propValue);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called when the component will unmount\r\n   */\r\n  public componentWillUnmount() {\r\n    if (typeof this.async !== 'undefined') {\r\n      this.async.dispose();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Renders the SPListpicker controls with Office UI Fabric\r\n   */\r\n  public render(): JSX.Element {\r\n    // Renders content\r\n    return (\r\n      <div>\r\n        <Label>{this.props.label}</Label>\r\n        <Dropdown\r\n          disabled={this.props.disabled}\r\n          label=''\r\n          onChanged={this.onChanged}\r\n          options={this.state.results}\r\n          selectedKey={this.state.selectedKey}\r\n        />\r\n\r\n        <FieldErrorMessage errorMessage={this.state.errorMessage} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}