{"version":3,"sources":["propertyFields/listPicker/PropertyFieldListPicker.ts"],"names":[],"mappings":"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","file":"propertyFields/listPicker/PropertyFieldListPicker.js","sourcesContent":["import * as React from 'react';\r\nimport * as ReactDom from 'react-dom';\r\nimport {\r\n  IPropertyPaneField,\r\n  PropertyPaneFieldType,\r\n  IWebPartContext\r\n} from '@microsoft/sp-webpart-base';\r\nimport PropertyFieldListPickerHost from './PropertyFieldListPickerHost';\r\nimport PropertyFieldListMultiPickerHost from './PropertyFieldListMultiPickerHost';\r\nimport { IPropertyFieldListPickerHostProps } from './IPropertyFieldListPickerHost';\r\nimport { IPropertyFieldListMultiPickerHostProps } from './IPropertyFieldListMultiPickerHost';\r\nimport { PropertyFieldListPickerOrderBy, IPropertyFieldListPickerProps, IPropertyFieldListPickerPropsInternal } from './IPropertyFieldListPicker';\r\n\r\n/**\r\n * Represents a PropertyFieldListPicker object\r\n */\r\nclass PropertyFieldListPickerBuilder implements IPropertyPaneField<IPropertyFieldListPickerPropsInternal> {\r\n\r\n  //Properties defined by IPropertyPaneField\r\n  public type: PropertyPaneFieldType = PropertyPaneFieldType.Custom;\r\n  public targetProperty: string;\r\n  public properties: IPropertyFieldListPickerPropsInternal;\r\n\r\n  //Custom properties label: string;\r\n  private label: string;\r\n  private context: IWebPartContext;\r\n  private selectedList: string;\r\n  private selectedLists: string[];\r\n  private baseTemplate: number;\r\n  private orderBy: PropertyFieldListPickerOrderBy;\r\n  private multiSelect: boolean;\r\n  private includeHidden: boolean;\r\n\r\n  public onPropertyChange(propertyPath: string, oldValue: any, newValue: any): void { }\r\n  private customProperties: any;\r\n  private key: string;\r\n  private disabled: boolean = false;\r\n  private onGetErrorMessage: (value: string) => string | Promise<string>;\r\n  private deferredValidationTime: number = 200;\r\n  private renderWebPart: () => void;\r\n  private disableReactivePropertyChanges: boolean = false;\r\n\r\n  /**\r\n   * Constructor method\r\n   */\r\n  public constructor(_targetProperty: string, _properties: IPropertyFieldListPickerPropsInternal) {\r\n    this.render = this.render.bind(this);\r\n    this.targetProperty = _targetProperty;\r\n    this.properties = _properties;\r\n    this.properties.onDispose = this.dispose;\r\n    this.properties.onRender = this.render;\r\n    this.label = _properties.label;\r\n    this.context = _properties.context;\r\n    this.selectedList = _properties.selectedList;\r\n    this.selectedLists = _properties.selectedLists;\r\n    this.baseTemplate = _properties.baseTemplate;\r\n    this.orderBy = _properties.orderBy;\r\n    this.multiSelect = _properties.multiSelect;\r\n    this.includeHidden = _properties.includeHidden;\r\n    this.onPropertyChange = _properties.onPropertyChange;\r\n    this.customProperties = _properties.properties;\r\n    this.key = _properties.key;\r\n    this.onGetErrorMessage = _properties.onGetErrorMessage;\r\n\r\n    if (_properties.disabled === true) {\r\n      this.disabled = _properties.disabled;\r\n    }\r\n    if (_properties.deferredValidationTime) {\r\n      this.deferredValidationTime = _properties.deferredValidationTime;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Renders the SPListPicker field content\r\n   */\r\n  private render(elem: HTMLElement, ctx?: any, changeCallback?: (targetProperty?: string, newValue?: any) => void): void {\r\n    const componentProps = {\r\n      label: this.label,\r\n      targetProperty: this.targetProperty,\r\n      context: this.context,\r\n      baseTemplate: this.baseTemplate,\r\n      orderBy: this.orderBy,\r\n      multiSelect: this.multiSelect,\r\n      includeHidden: this.includeHidden,\r\n      onDispose: this.dispose,\r\n      onRender: this.render,\r\n      onChange: changeCallback,\r\n      onPropertyChange: this.onPropertyChange,\r\n      properties: this.customProperties,\r\n      key: this.key,\r\n      disabled: this.disabled,\r\n      onGetErrorMessage: this.onGetErrorMessage,\r\n      deferredValidationTime: this.deferredValidationTime\r\n    };\r\n\r\n    // Check if the multi or single select component has to get loaded\r\n    if (this.multiSelect) {\r\n      // Multi selector\r\n      componentProps['selectedLists'] = this.selectedLists;\r\n      const element: React.ReactElement<IPropertyFieldListMultiPickerHostProps> = React.createElement(PropertyFieldListMultiPickerHost, componentProps);\r\n      // Calls the REACT content generator\r\n      ReactDom.render(element, elem);\r\n    } else {\r\n      // Single selector\r\n      componentProps['selectedList'] = this.selectedList;\r\n      const element: React.ReactElement<IPropertyFieldListPickerHostProps> = React.createElement(PropertyFieldListPickerHost, componentProps);\r\n      // Calls the REACT content generator\r\n      ReactDom.render(element, elem);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Disposes the current object\r\n   */\r\n  private dispose(elem: HTMLElement): void {\r\n\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * Helper method to create a SPList Picker on the PropertyPane.\r\n * @param targetProperty - Target property the SharePoint list picker is associated to.\r\n * @param properties - Strongly typed SPList Picker properties.\r\n */\r\nexport function PropertyFieldListPicker(targetProperty: string, properties: IPropertyFieldListPickerProps): IPropertyPaneField<IPropertyFieldListPickerPropsInternal> {\r\n\r\n  //Create an internal properties object from the given properties\r\n  const newProperties: IPropertyFieldListPickerPropsInternal = {\r\n    label: properties.label,\r\n    targetProperty: targetProperty,\r\n    context: properties.context,\r\n    selectedList: typeof properties.selectedList === 'string' ? properties.selectedList : null,\r\n    selectedLists: typeof properties.selectedList !== 'string' ? properties.selectedList : null,\r\n    baseTemplate: properties.baseTemplate,\r\n    orderBy: properties.orderBy,\r\n    multiSelect: properties.multiSelect || false,\r\n    includeHidden: properties.includeHidden,\r\n    onPropertyChange: properties.onPropertyChange,\r\n    properties: properties.properties,\r\n    onDispose: null,\r\n    onRender: null,\r\n    key: properties.key,\r\n    disabled: properties.disabled,\r\n    onGetErrorMessage: properties.onGetErrorMessage,\r\n    deferredValidationTime: properties.deferredValidationTime\r\n  };\r\n  //Calls the PropertyFieldListPicker builder object\r\n  //This object will simulate a PropertyFieldCustom to manage his rendering process\r\n  return new PropertyFieldListPickerBuilder(targetProperty, newProperties);\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}